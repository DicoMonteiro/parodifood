<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.1 on win32)" generated="20210508 11:58:33.659" rpa="false">
<suite id="s1" name="Tests" source="C:\Users\02047838525\Documents\rfw\parodifood\tests">
<suite id="s1-s1" name="Busca" source="C:\Users\02047838525\Documents\rfw\parodifood\tests\busca.robot">
<test id="s1-s1-t1" name="Deve buscar um único restaurante">
<kw name="Start Session" library="home" type="setup">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>chromium</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20210508 11:58:34.590" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210508 11:58:35.108" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210508 11:58:34.590" endtime="20210508 11:58:35.108"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodifood.qaninja.academy/</arg>
</arguments>
<msg timestamp="20210508 11:58:39.015" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210508 11:58:35.109" endtime="20210508 11:58:39.015"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:39.015" endtime="20210508 11:58:39.079"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:34.590" endtime="20210508 11:58:39.079"></status>
</kw>
<kw name="Search Restaurant" library="search">
<arguments>
<arg>Debuger</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>text=Estou com fome!</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:39.081" endtime="20210508 11:58:39.186"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:39.186" endtime="20210508 11:58:39.203"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=.search-link</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:39.204" endtime="20210508 11:58:39.256"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=input[formcontrolname="searchControl"]</arg>
<arg>${TARGET}</arg>
</arguments>
<msg timestamp="20210508 11:58:39.257" level="INFO">Fills the text 'Debuger' in the given field.</msg>
<status status="PASS" starttime="20210508 11:58:39.256" endtime="20210508 11:58:39.274"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:39.081" endtime="20210508 11:58:39.275"></status>
</kw>
<kw name="Restaurant Should Be Visible" library="search">
<arguments>
<arg>DEBUGER KING</arg>
<arg>${ELEMENT}</arg>
<arg>${ELEMENT_INFO_BOX}</arg>
</arguments>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>${ELEMENT_INFO_BOX}</arg>
<arg>visible</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20210508 11:58:40.364" level="INFO">Wait for Element with selector: css=div[class="place-info-box"][style="opacity: 1;"]</msg>
<status status="PASS" starttime="20210508 11:58:39.278" endtime="20210508 11:58:40.365"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>${ELEMENT}</arg>
<arg>contains</arg>
<arg>${NAME}</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:40.365" endtime="20210508 11:58:40.381"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:39.276" endtime="20210508 11:58:40.382"></status>
</kw>
<kw name="Verify Quantities Restaurants" library="search">
<arguments>
<arg>1</arg>
<arg>${ELEMENT}</arg>
<arg>${ELEMENT_INFO_BOX}</arg>
</arguments>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>${ELEMENT_INFO_BOX}</arg>
<arg>visible</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20210508 11:58:40.392" level="INFO">Wait for Element with selector: css=div[class="place-info-box"][style="opacity: 1;"]</msg>
<status status="PASS" starttime="20210508 11:58:40.382" endtime="20210508 11:58:40.393"></status>
</kw>
<kw name="Get Element Count" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns the count of elements found with ``selector``.</doc>
<arguments>
<arg>${ELEMENT}</arg>
<arg>equal</arg>
<arg>${QUANTITY}</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:40.394" endtime="20210508 11:58:40.401"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:40.382" endtime="20210508 11:58:40.401"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210508 11:58:40.792" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-104.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-104.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210508 11:58:40.401" endtime="20210508 11:58:40.792"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:34.590" endtime="20210508 11:58:40.793" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Deve buscar por categoria">
<kw name="Start Session" library="home" type="setup">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>chromium</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20210508 11:58:40.880" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210508 11:58:41.476" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210508 11:58:40.880" endtime="20210508 11:58:41.476"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodifood.qaninja.academy/</arg>
</arguments>
<msg timestamp="20210508 11:58:44.980" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210508 11:58:41.476" endtime="20210508 11:58:44.981"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:44.981" endtime="20210508 11:58:45.023"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:40.879" endtime="20210508 11:58:45.023"></status>
</kw>
<kw name="Search Restaurant" library="search">
<arguments>
<arg>Cafe</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>text=Estou com fome!</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:45.024" endtime="20210508 11:58:45.123"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:45.123" endtime="20210508 11:58:45.134"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=.search-link</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:45.134" endtime="20210508 11:58:45.179"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=input[formcontrolname="searchControl"]</arg>
<arg>${TARGET}</arg>
</arguments>
<msg timestamp="20210508 11:58:45.179" level="INFO">Fills the text 'Cafe' in the given field.</msg>
<status status="PASS" starttime="20210508 11:58:45.179" endtime="20210508 11:58:45.193"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:45.024" endtime="20210508 11:58:45.193"></status>
</kw>
<kw name="Restaurant Should Be Visible" library="search">
<arguments>
<arg>STARBUGS COFFEE</arg>
<arg>${ELEMENT}</arg>
<arg>${ELEMENT_INFO_BOX}</arg>
</arguments>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>${ELEMENT_INFO_BOX}</arg>
<arg>visible</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20210508 11:58:46.299" level="INFO">Wait for Element with selector: css=div[class="place-info-box"][style="opacity: 1;"]</msg>
<status status="PASS" starttime="20210508 11:58:45.194" endtime="20210508 11:58:46.300"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>${ELEMENT}</arg>
<arg>contains</arg>
<arg>${NAME}</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:46.300" endtime="20210508 11:58:46.314"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:45.193" endtime="20210508 11:58:46.315"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210508 11:58:46.677" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-105.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-105.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210508 11:58:46.315" endtime="20210508 11:58:46.677"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:40.875" endtime="20210508 11:58:46.678" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Deve buscar todos os restaurantes">
<kw name="Start Session" library="home" type="setup">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>chromium</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20210508 11:58:46.767" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210508 11:58:47.370" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210508 11:58:46.767" endtime="20210508 11:58:47.372"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodifood.qaninja.academy/</arg>
</arguments>
<msg timestamp="20210508 11:58:51.203" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210508 11:58:47.372" endtime="20210508 11:58:51.203"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:51.204" endtime="20210508 11:58:51.247"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:46.766" endtime="20210508 11:58:51.248"></status>
</kw>
<kw name="Search Restaurant" library="search">
<arguments>
<arg>a</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>text=Estou com fome!</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:51.248" endtime="20210508 11:58:51.313"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:51.314" endtime="20210508 11:58:51.329"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=.search-link</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:51.329" endtime="20210508 11:58:51.363"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=input[formcontrolname="searchControl"]</arg>
<arg>${TARGET}</arg>
</arguments>
<msg timestamp="20210508 11:58:51.363" level="INFO">Fills the text 'a' in the given field.</msg>
<status status="PASS" starttime="20210508 11:58:51.363" endtime="20210508 11:58:51.385"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:51.248" endtime="20210508 11:58:51.386"></status>
</kw>
<kw name="Verify Quantities Restaurants" library="search">
<arguments>
<arg>5</arg>
<arg>${ELEMENT}</arg>
<arg>${ELEMENT_INFO_BOX}</arg>
</arguments>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>${ELEMENT_INFO_BOX}</arg>
<arg>visible</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20210508 11:58:52.504" level="INFO">Wait for Element with selector: css=div[class="place-info-box"][style="opacity: 1;"]</msg>
<status status="PASS" starttime="20210508 11:58:51.388" endtime="20210508 11:58:52.506"></status>
</kw>
<kw name="Get Element Count" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns the count of elements found with ``selector``.</doc>
<arguments>
<arg>${ELEMENT}</arg>
<arg>equal</arg>
<arg>${QUANTITY}</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:52.507" endtime="20210508 11:58:52.523"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:51.387" endtime="20210508 11:58:52.524"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210508 11:58:52.912" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-106.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-106.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210508 11:58:52.525" endtime="20210508 11:58:52.912"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:46.761" endtime="20210508 11:58:52.913" critical="yes"></status>
</test>
<status status="PASS" starttime="20210508 11:58:33.690" endtime="20210508 11:58:52.999"></status>
</suite>
<suite id="s1-s2" name="Carrinho" source="C:\Users\02047838525\Documents\rfw\parodifood\tests\carrinho.robot">
<test id="s1-s2-t1" name="Deve adicionar um item ao carrinho">
<kw name="Start Session" library="home" type="setup">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>chromium</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20210508 11:58:53.028" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210508 11:58:53.604" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210508 11:58:53.028" endtime="20210508 11:58:53.604"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodifood.qaninja.academy/</arg>
</arguments>
<msg timestamp="20210508 11:58:57.595" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210508 11:58:53.604" endtime="20210508 11:58:57.596"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:57.596" endtime="20210508 11:58:57.642"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:53.028" endtime="20210508 11:58:57.642"></status>
</kw>
<kw name="Get JSON" library="base">
<arguments>
<arg>cart.json</arg>
</arguments>
<assign>
<var>${cart_json}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/fixtures/${FILE_NAME}</arg>
</arguments>
<assign>
<var>${FILE}</var>
</assign>
<msg timestamp="20210508 11:58:57.643" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\02047838525\Documents\rfw\parodifood\resources\fixtures\cart.json"&gt;C:\Users\02047838525\Documents\rfw\parodifood\resources\fixtures\cart.json&lt;/a&gt;'.</msg>
<msg timestamp="20210508 11:58:57.643" level="INFO">${FILE} = {
    "search_item": "Cafe",
    "restaurant": "STARBUGS COFFEE",
    "desc": "Nada melhor que um café pra te ajudar a resolver um bug.",
    "products": [
        {
            "name": "Cappuccino co...</msg>
<status status="PASS" starttime="20210508 11:58:57.642" endtime="20210508 11:58:57.643"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.loads($FILE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${SUPER_VAR}</var>
</assign>
<msg timestamp="20210508 11:58:57.663" level="INFO">${SUPER_VAR} = {'search_item': 'Cafe', 'restaurant': 'STARBUGS COFFEE', 'desc': 'Nada melhor que um café pra te ajudar a resolver um bug.', 'products': [{'name': 'Cappuccino com Chantilly'}, {'name': 'Super Espreso'...</msg>
<status status="PASS" starttime="20210508 11:58:57.643" endtime="20210508 11:58:57.663"></status>
</kw>
<msg timestamp="20210508 11:58:57.663" level="INFO">${cart_json} = {'search_item': 'Cafe', 'restaurant': 'STARBUGS COFFEE', 'desc': 'Nada melhor que um café pra te ajudar a resolver um bug.', 'products': [{'name': 'Cappuccino com Chantilly'}, {'name': 'Super Espreso'...</msg>
<status status="PASS" starttime="20210508 11:58:57.642" endtime="20210508 11:58:57.663"></status>
</kw>
<kw name="Search Restaurant" library="search">
<arguments>
<arg>${cart_json["search_item"]}</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>text=Estou com fome!</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:57.664" endtime="20210508 11:58:57.730"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:57.730" endtime="20210508 11:58:57.746"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=.search-link</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:57.746" endtime="20210508 11:58:57.775"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=input[formcontrolname="searchControl"]</arg>
<arg>${TARGET}</arg>
</arguments>
<msg timestamp="20210508 11:58:57.776" level="INFO">Fills the text 'Cafe' in the given field.</msg>
<status status="PASS" starttime="20210508 11:58:57.775" endtime="20210508 11:58:57.789"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:57.664" endtime="20210508 11:58:57.790"></status>
</kw>
<kw name="Choose Restaurant" library="search">
<arguments>
<arg>${cart_json}</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>text=${var["restaurant"]}</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:57.790" endtime="20210508 11:58:58.871"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>css=#detail</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210508 11:58:58.883" level="INFO">Wait for Element with selector: css=#detail</msg>
<status status="PASS" starttime="20210508 11:58:58.872" endtime="20210508 11:58:58.884"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=#detail</arg>
<arg>contains</arg>
<arg>${var["desc"]}</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:58.884" endtime="20210508 11:58:58.985"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:57.790" endtime="20210508 11:58:58.986"></status>
</kw>
<kw name="Add To Cart" library="cart">
<arguments>
<arg>${cart_json["products"][2]["name"]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${NAME}</arg>
</arguments>
<msg timestamp="20210508 11:58:58.986" level="INFO">Starbugs 500 error</msg>
<status status="PASS" starttime="20210508 11:58:58.986" endtime="20210508 11:58:58.986"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//span[text()="${NAME}"]/..//a[@class="add-to-cart"]</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:58.987" endtime="20210508 11:58:59.376"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:58.986" endtime="20210508 11:58:59.377"></status>
</kw>
<kw name="Should Add To Cart" library="cart">
<arguments>
<arg>${cart_json["products"][2]["name"]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${NAME}</arg>
</arguments>
<msg timestamp="20210508 11:58:59.378" level="INFO">Starbugs 500 error</msg>
<status status="PASS" starttime="20210508 11:58:59.378" endtime="20210508 11:58:59.378"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>css=#cart tr &gt;&gt; text=${NAME}</arg>
<arg>visible</arg>
<arg>5</arg>
</arguments>
<msg timestamp="20210508 11:58:59.392" level="INFO">Wait for Element with selector: css=#cart tr &gt;&gt; text=Starbugs 500 error</msg>
<status status="PASS" starttime="20210508 11:58:59.378" endtime="20210508 11:58:59.392"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:59.377" endtime="20210508 11:58:59.393"></status>
</kw>
<kw name="Total Cart Should Be" library="cart">
<arguments>
<arg>15,60</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TOTAL}</arg>
</arguments>
<msg timestamp="20210508 11:58:59.394" level="INFO">15,60</msg>
<status status="PASS" starttime="20210508 11:58:59.394" endtime="20210508 11:58:59.394"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>xpath=//th[contains(text(), "Total")]/../td</arg>
<arg>contains</arg>
<arg>${TOTAL}</arg>
</arguments>
<status status="PASS" starttime="20210508 11:58:59.394" endtime="20210508 11:58:59.407"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:59.393" endtime="20210508 11:58:59.407"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210508 11:58:59.795" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-107.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-107.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210508 11:58:59.408" endtime="20210508 11:58:59.795"></status>
</kw>
<tags>
<tag>unico_item</tag>
</tags>
<status status="PASS" starttime="20210508 11:58:53.028" endtime="20210508 11:58:59.797" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Deve adicionar 3 itens ao carrinho">
<kw name="Start Session" library="home" type="setup">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>chromium</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20210508 11:58:59.875" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210508 11:59:00.426" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210508 11:58:59.875" endtime="20210508 11:59:00.428"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodifood.qaninja.academy/</arg>
</arguments>
<msg timestamp="20210508 11:59:04.152" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210508 11:59:00.428" endtime="20210508 11:59:04.155"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
</arguments>
<status status="PASS" starttime="20210508 11:59:04.156" endtime="20210508 11:59:04.199"></status>
</kw>
<status status="PASS" starttime="20210508 11:58:59.874" endtime="20210508 11:59:04.199"></status>
</kw>
<kw name="Get JSON" library="base">
<arguments>
<arg>cart.json</arg>
</arguments>
<assign>
<var>${cart_json}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/fixtures/${FILE_NAME}</arg>
</arguments>
<assign>
<var>${FILE}</var>
</assign>
<msg timestamp="20210508 11:59:04.200" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\02047838525\Documents\rfw\parodifood\resources\fixtures\cart.json"&gt;C:\Users\02047838525\Documents\rfw\parodifood\resources\fixtures\cart.json&lt;/a&gt;'.</msg>
<msg timestamp="20210508 11:59:04.201" level="INFO">${FILE} = {
    "search_item": "Cafe",
    "restaurant": "STARBUGS COFFEE",
    "desc": "Nada melhor que um café pra te ajudar a resolver um bug.",
    "products": [
        {
            "name": "Cappuccino co...</msg>
<status status="PASS" starttime="20210508 11:59:04.200" endtime="20210508 11:59:04.201"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.loads($FILE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${SUPER_VAR}</var>
</assign>
<msg timestamp="20210508 11:59:04.202" level="INFO">${SUPER_VAR} = {'search_item': 'Cafe', 'restaurant': 'STARBUGS COFFEE', 'desc': 'Nada melhor que um café pra te ajudar a resolver um bug.', 'products': [{'name': 'Cappuccino com Chantilly'}, {'name': 'Super Espreso'...</msg>
<status status="PASS" starttime="20210508 11:59:04.201" endtime="20210508 11:59:04.202"></status>
</kw>
<msg timestamp="20210508 11:59:04.202" level="INFO">${cart_json} = {'search_item': 'Cafe', 'restaurant': 'STARBUGS COFFEE', 'desc': 'Nada melhor que um café pra te ajudar a resolver um bug.', 'products': [{'name': 'Cappuccino com Chantilly'}, {'name': 'Super Espreso'...</msg>
<status status="PASS" starttime="20210508 11:59:04.200" endtime="20210508 11:59:04.202"></status>
</kw>
<kw name="Search Restaurant" library="search">
<arguments>
<arg>${cart_json["search_item"]}</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>text=Estou com fome!</arg>
</arguments>
<status status="PASS" starttime="20210508 11:59:04.203" endtime="20210508 11:59:04.278"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
</arguments>
<status status="PASS" starttime="20210508 11:59:04.278" endtime="20210508 11:59:04.293"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=.search-link</arg>
</arguments>
<status status="PASS" starttime="20210508 11:59:04.293" endtime="20210508 11:59:04.324"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=input[formcontrolname="searchControl"]</arg>
<arg>${TARGET}</arg>
</arguments>
<msg timestamp="20210508 11:59:04.325" level="INFO">Fills the text 'Cafe' in the given field.</msg>
<status status="PASS" starttime="20210508 11:59:04.324" endtime="20210508 11:59:04.341"></status>
</kw>
<status status="PASS" starttime="20210508 11:59:04.203" endtime="20210508 11:59:04.341"></status>
</kw>
<kw name="Choose Restaurant" library="search">
<arguments>
<arg>${cart_json}</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>text=${var["restaurant"]}</arg>
</arguments>
<status status="PASS" starttime="20210508 11:59:04.342" endtime="20210508 11:59:05.613"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>css=#detail</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210508 11:59:05.627" level="INFO">Wait for Element with selector: css=#detail</msg>
<status status="PASS" starttime="20210508 11:59:05.613" endtime="20210508 11:59:05.627"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=#detail</arg>
<arg>contains</arg>
<arg>${var["desc"]}</arg>
</arguments>
<status status="PASS" starttime="20210508 11:59:05.628" endtime="20210508 11:59:05.781"></status>
</kw>
<status status="PASS" starttime="20210508 11:59:04.341" endtime="20210508 11:59:05.781"></status>
</kw>
<kw name="${product} IN [ @{cart_json[&quot;products&quot;]} ]" type="for">
<kw name="${product} = {'name': 'Cappuccino com Chantilly'}" type="foritem">
<kw name="Add To Cart" library="cart">
<arguments>
<arg>${product["name"]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${NAME}</arg>
</arguments>
<msg timestamp="20210508 11:59:05.782" level="INFO">Cappuccino com Chantilly</msg>
<status status="PASS" starttime="20210508 11:59:05.782" endtime="20210508 11:59:05.782"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//span[text()="${NAME}"]/..//a[@class="add-to-cart"]</arg>
</arguments>
<status status="PASS" starttime="20210508 11:59:05.782" endtime="20210508 11:59:06.092"></status>
</kw>
<status status="PASS" starttime="20210508 11:59:05.782" endtime="20210508 11:59:06.093"></status>
</kw>
<kw name="Should Add To Cart" library="cart">
<arguments>
<arg>${product["name"]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${NAME}</arg>
</arguments>
<msg timestamp="20210508 11:59:06.093" level="INFO">Cappuccino com Chantilly</msg>
<status status="PASS" starttime="20210508 11:59:06.093" endtime="20210508 11:59:06.093"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>css=#cart tr &gt;&gt; text=${NAME}</arg>
<arg>visible</arg>
<arg>5</arg>
</arguments>
<msg timestamp="20210508 11:59:06.110" level="INFO">Wait for Element with selector: css=#cart tr &gt;&gt; text=Cappuccino com Chantilly</msg>
<status status="PASS" starttime="20210508 11:59:06.094" endtime="20210508 11:59:06.110"></status>
</kw>
<status status="PASS" starttime="20210508 11:59:06.093" endtime="20210508 11:59:06.111"></status>
</kw>
<status status="PASS" starttime="20210508 11:59:05.782" endtime="20210508 11:59:06.111"></status>
</kw>
<kw name="${product} = {'name': 'Super Espreso'}" type="foritem">
<kw name="Add To Cart" library="cart">
<arguments>
<arg>${product["name"]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${NAME}</arg>
</arguments>
<msg timestamp="20210508 11:59:06.111" level="INFO">Super Espreso</msg>
<status status="PASS" starttime="20210508 11:59:06.111" endtime="20210508 11:59:06.111"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//span[text()="${NAME}"]/..//a[@class="add-to-cart"]</arg>
</arguments>
<status status="PASS" starttime="20210508 11:59:06.111" endtime="20210508 11:59:06.165"></status>
</kw>
<status status="PASS" starttime="20210508 11:59:06.111" endtime="20210508 11:59:06.165"></status>
</kw>
<kw name="Should Add To Cart" library="cart">
<arguments>
<arg>${product["name"]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${NAME}</arg>
</arguments>
<msg timestamp="20210508 11:59:06.165" level="INFO">Super Espreso</msg>
<status status="PASS" starttime="20210508 11:59:06.165" endtime="20210508 11:59:06.165"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>css=#cart tr &gt;&gt; text=${NAME}</arg>
<arg>visible</arg>
<arg>5</arg>
</arguments>
<msg timestamp="20210508 11:59:06.179" level="INFO">Wait for Element with selector: css=#cart tr &gt;&gt; text=Super Espreso</msg>
<status status="PASS" starttime="20210508 11:59:06.166" endtime="20210508 11:59:06.180"></status>
</kw>
<status status="PASS" starttime="20210508 11:59:06.165" endtime="20210508 11:59:06.180"></status>
</kw>
<status status="PASS" starttime="20210508 11:59:06.111" endtime="20210508 11:59:06.180"></status>
</kw>
<kw name="${product} = {'name': 'Starbugs 500 error'}" type="foritem">
<kw name="Add To Cart" library="cart">
<arguments>
<arg>${product["name"]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${NAME}</arg>
</arguments>
<msg timestamp="20210508 11:59:06.181" level="INFO">Starbugs 500 error</msg>
<status status="PASS" starttime="20210508 11:59:06.180" endtime="20210508 11:59:06.181"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//span[text()="${NAME}"]/..//a[@class="add-to-cart"]</arg>
</arguments>
<status status="PASS" starttime="20210508 11:59:06.181" endtime="20210508 11:59:06.232"></status>
</kw>
<status status="PASS" starttime="20210508 11:59:06.180" endtime="20210508 11:59:06.233"></status>
</kw>
<kw name="Should Add To Cart" library="cart">
<arguments>
<arg>${product["name"]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${NAME}</arg>
</arguments>
<msg timestamp="20210508 11:59:06.234" level="INFO">Starbugs 500 error</msg>
<status status="PASS" starttime="20210508 11:59:06.234" endtime="20210508 11:59:06.234"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>css=#cart tr &gt;&gt; text=${NAME}</arg>
<arg>visible</arg>
<arg>5</arg>
</arguments>
<msg timestamp="20210508 11:59:06.247" level="INFO">Wait for Element with selector: css=#cart tr &gt;&gt; text=Starbugs 500 error</msg>
<status status="PASS" starttime="20210508 11:59:06.234" endtime="20210508 11:59:06.247"></status>
</kw>
<status status="PASS" starttime="20210508 11:59:06.233" endtime="20210508 11:59:06.247"></status>
</kw>
<status status="PASS" starttime="20210508 11:59:06.180" endtime="20210508 11:59:06.247"></status>
</kw>
<status status="PASS" starttime="20210508 11:59:05.781" endtime="20210508 11:59:06.247"></status>
</kw>
<kw name="Total Cart Should Be" library="cart">
<arguments>
<arg>${cart_json["total"]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TOTAL}</arg>
</arguments>
<msg timestamp="20210508 11:59:06.248" level="INFO">38,00</msg>
<status status="PASS" starttime="20210508 11:59:06.248" endtime="20210508 11:59:06.248"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>xpath=//th[contains(text(), "Total")]/../td</arg>
<arg>contains</arg>
<arg>${TOTAL}</arg>
</arguments>
<status status="PASS" starttime="20210508 11:59:06.248" endtime="20210508 11:59:06.264"></status>
</kw>
<status status="PASS" starttime="20210508 11:59:06.248" endtime="20210508 11:59:06.264"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210508 11:59:06.667" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-108.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-108.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210508 11:59:06.264" endtime="20210508 11:59:06.667"></status>
</kw>
<tags>
<tag>temp</tag>
</tags>
<status status="PASS" starttime="20210508 11:58:59.868" endtime="20210508 11:59:06.667" critical="yes"></status>
</test>
<status status="PASS" starttime="20210508 11:58:53.011" endtime="20210508 11:59:06.759"></status>
</suite>
<status status="PASS" starttime="20210508 11:58:33.674" endtime="20210508 11:59:06.767"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">temp</stat>
<stat pass="1" fail="0">unico_item</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="Tests">Tests</stat>
<stat pass="3" fail="0" id="s1-s1" name="Busca">Tests.Busca</stat>
<stat pass="2" fail="0" id="s1-s2" name="Carrinho">Tests.Carrinho</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
